/**
 * Class for Mid Priority Tickets, used to store and calculate relevant information about
 * mid priority tickets
 * @author Jose Merida
 * @version 1.0
 * @since 07-11-2023
 */
public class MidPriorityTicket implements Ticket{
    private int hours;
    private int employeeComission;

    /**
     * Creates a new Mid Priority Ticket
     * @param hours The hours of the ticket
     * @param employeeComission The employee comission for the ticket
     */
    public MidPriorityTicket(int hours, int employeeComission){
        this.hours = hours;
        this.employeeComission = employeeComission;
    }

    /**
     * Calculates the income generated by the ticket
     * @return the income generated by the ticket
     */
    public double getIncome(){
        return (hours*10) + ((double) (hours * employeeComission) / 100);
    }

    /**
     * Getter method for the hours attribute
     * @return hours
     */
    public int getHours(){
        return hours;
    }

    /**
     * Getter method for the employee comission attribute
     * @return employeeComission
     */
    public int getEmployeeComission(){
        return employeeComission;
    }
}